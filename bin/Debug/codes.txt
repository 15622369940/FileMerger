【文件】 \bin\Debug\Cfg.xml
<?xml version="1.0" encoding="utf-8"?>
<ConnPanelCfgs xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Items>
    <ConnPanelCfg>
      <Name>Teradata</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnTeradata</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>Oracle</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnOracle</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>SqlServer</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnSqlServer</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>Access</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnAccess</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>Excel</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnExcel</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>Text</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnText</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>FoxPro</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnFoxPro</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>VisualFoxPro</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnVisualFoxPro</TypeName>
    </ConnPanelCfg>
    <ConnPanelCfg>
      <Name>MySQL</Name>
      <AssemblyFile>ConnectionString.exe</AssemblyFile>
      <TypeName>ConnectionString.Conn.ConnMySql</TypeName>
    </ConnPanelCfg>
  </Items>
</ConnPanelCfgs>


【文件】 \bin\Debug\readme.txt
ConnectionString.exe

---------------------------------------------------------------------------
FUNC: generate connection string, and encode them using DES64 arithmetic.
AUTH: kevin cheng
BLOG: surfsky.cnblogs.com
MAIL: surfsky@sina.com
DATE: 2005-11
LAST: 2009-05
---------------------------------------------------------------------------

1. How to add plugins to generate more connection strings :
    (1)The plugin control must complete the following interface:
        public interface IConnectionString
        {
           string ConnectionString {get;}
        }

    (2)Add node into cfg.xml file. The <ConnPanelCfg> node may be look like:
        <ConnPanelCfg>
          <Name>Oracle</Name>
          <AssemblyFile>ConnectionString.exe</AssemblyFile>
          <TypeName>ConnectionString.ConnOracle</TypeName>
        </ConnPanelCfg>

2. You can decode DES file with this code:
    using Tool.Security;
    string str = Tool.Security.Security.DecryptDesF2S(fileIn, key);

3. This software is free to use and distribute. However, please lease these file unchanged.
4. Contact with me if you have any question, or publish your plugins if you will.


【文件】 \Conn\ConnAccess.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnAccess : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.TextBox txtUserId;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.Button btnFile;
        private System.Windows.Forms.OpenFileDialog dlgOpenFile;
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;

        private System.ComponentModel.Container components = null;
		public ConnAccess()
		{
			InitializeComponent();
		}

		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.txtUserId = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.btnFile = new System.Windows.Forms.Button();
            this.dlgOpenFile = new System.Windows.Forms.OpenFileDialog();
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.txtPassword.Location = new System.Drawing.Point(112, 80);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.Size = new System.Drawing.Size(232, 21);
            this.txtPassword.TabIndex = 11;
            this.txtPassword.Text = "password";
            // 
            this.label3.Location = new System.Drawing.Point(8, 88);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(64, 23);
            this.label3.TabIndex = 10;
            this.label3.Text = "Password";
            // 
            this.txtUserId.Location = new System.Drawing.Point(112, 56);
            this.txtUserId.Name = "txtUserId";
            this.txtUserId.Size = new System.Drawing.Size(232, 21);
            this.txtUserId.TabIndex = 9;
            this.txtUserId.Text = "userId";
            // 
            this.label2.Location = new System.Drawing.Point(8, 64);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(64, 23);
            this.label2.TabIndex = 8;
            this.label2.Text = "User Id";
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(200, 21);
            this.txtDataSource.TabIndex = 7;
            this.txtDataSource.Text = "c:\\test.mdb";
            // 
            this.label1.Location = new System.Drawing.Point(8, 40);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 6;
            this.label1.Text = "Data Source";
            // 
            this.btnFile.Location = new System.Drawing.Point(318, 30);
            this.btnFile.Name = "btnFile";
            this.btnFile.Size = new System.Drawing.Size(26, 24);
            this.btnFile.TabIndex = 12;
            this.btnFile.Text = "...";
            this.btnFile.Click += new System.EventHandler(this.btnFile_Click);
            // 
            this.dlgOpenFile.Filter = "txt files (*.mdb)|*.mdb|All files (*.*)|*.*";
            this.dlgOpenFile.RestoreDirectory = true;
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.btnFile);
            this.Controls.Add(this.txtPassword);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtUserId);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Name = "ConnAccess";
            this.Size = new System.Drawing.Size(552, 128);
            this.Load += new System.EventHandler(this.ConnAccess_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }
		#endregion

        private void btnFile_Click(object sender, System.EventArgs e)
        {
            if (DialogResult.OK == this.dlgOpenFile.ShowDialog(this))
            {
                this.txtDataSource.Text = this.dlgOpenFile.FileName;
            }
        }

        private void ConnAccess_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            "Driver={{Microsoft Access Driver (*.mdb)}}; Dbq={0}; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 1:
                        return string.Format(
                            "Provider=Microsoft.Jet.OLEDB.4.0; Data Source={0}; User Id={1}; Password={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    default:
                        return "";
                }
            }
        }
    }
}


【文件】 \Conn\ConnAccess.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>


【文件】 \Conn\ConnDB2.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnDB2 : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnDB2()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnDB2";
            this.Size = new System.Drawing.Size(488, 150);
            this.Load += new System.EventHandler(this.ConnDB2_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnDB2_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "DB2 .NET Data Provider",
                "Microsoft OLEDB provider for DB2",
                "IBM OLE DB Provider for DB2",
                "IBM DB2 Driver for ODBC and CLI",
                ".NET Framework Data Provider for OLE DB",
                ".NET Framework Data Provider for ODBC"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format("Server=myAddress:myPortNumber;Database=myDataBase;UID=myUsername;PWD=myPassword;");
                    case 1:
                        return string.Format("Provider=DB2OLEDB;Network Transport Library=TCPIP;Network Address=xxx.xxx.xxx.xxx;Initial Catalog=MyCtlg;Package Collection=MyPkgCol;Default Schema=Schema;User ID=myUsername;Password=myPassword;");
                    case 2:
                        return string.Format("Provider=IBMDADB2;Database=myDataBase;Hostname=myServerAddress;Protocol=TCPIP; Port=50000;Uid=myUsername;Pwd=myPassword;");
                    case 3:
                        return string.Format("Driver={IBM DB2 ODBC DRIVER};Database=myDataBase;Hostname=myServerAddress;Port=1234; Protocol=TCPIP;Uid=myUsername;Pwd=myPassword;");
                    case 4:
                        return string.Format("Provider=IBMDADB2;Database=myDataBase;Hostname=myServerAddress;Protocol=TCPIP; Port=50000;Uid=myUsername;Pwd=myPassword;");
                    case 5:
                        return string.Format("Driver={IBM DB2 ODBC DRIVER};Database=myDataBase;Hostname=myServerAddress;Port=1234; Protocol=TCPIP;Uid=myUsername;Pwd=myPassword;");
                    default:
                        return "";
                }
            }
        }    
    }
}


【文件】 \Conn\ConnDB2.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.Name">
    <value>ConnDB2</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnDSN.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnDSN : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnDSN()
		{
			InitializeComponent();
		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnDSN";
            this.Size = new System.Drawing.Size(464, 150);
            this.Load += new System.EventHandler(this.ConnDSN_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnDSN_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC DSN",
                "File DSN",
                ".NET Framework Data Provider for ODBC",
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format("DSN=myDsn;Uid=myUsername;Pwd=;");
                    case 1:
                        return string.Format("FILEDSN=c:\\myDsnFile.dsn;Uid=myUsername;Pwd=;");
                    case 2:
                        return string.Format("DSN=myDsn;Uid=myUsername;Pwd=;");
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnDSN.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.Name">
    <value>ConnDSN</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnExcel.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnExcel : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.Button btnFile;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.OpenFileDialog dlgOpenFile;
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnExcel()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.btnFile = new System.Windows.Forms.Button();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.dlgOpenFile = new System.Windows.Forms.OpenFileDialog();
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.btnFile.Location = new System.Drawing.Point(329, 30);
            this.btnFile.Name = "btnFile";
            this.btnFile.Size = new System.Drawing.Size(23, 24);
            this.btnFile.TabIndex = 15;
            this.btnFile.Text = "...";
            this.btnFile.Click += new System.EventHandler(this.btnFile_Click);
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(211, 21);
            this.txtDataSource.TabIndex = 14;
            this.txtDataSource.Text = "c:\\test.xls";
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 13;
            this.label1.Text = "Data Source";
            // 
            this.dlgOpenFile.Filter = "Excel (*.xls)|*.xls|All files (*.*)|*.*";
            this.dlgOpenFile.RestoreDirectory = true;
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(240, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.btnFile);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Name = "ConnExcel";
            this.Size = new System.Drawing.Size(424, 160);
            this.Load += new System.EventHandler(this.ConnExcel_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }
		#endregion

        private void btnFile_Click(object sender, System.EventArgs e)
        {
            if (DialogResult.OK == this.dlgOpenFile.ShowDialog(this))
            {
                this.txtDataSource.Text = this.dlgOpenFile.FileName;
            }        
        }

        private void ConnExcel_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            @"Driver={{Microsoft Excel Driver (*.xls)}}; DriverId=790; Dbq={0}; DefaultDir=c:\mypath;",
                            this.txtDataSource.Text
                            );
                    case 1:
                        return string.Format(
                            "Provider=Microsoft.Jet.OLEDB.4.0; Data Source={0}; Extended Properties='Excel 8.0; HDR=Yes; IMEX=1;';",
                            this.txtDataSource.Text
                            );
                    default:
                        return "";
                }
            }
        }
	}
}


【文件】 \Conn\ConnExcel.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>


【文件】 \Conn\ConnFoxPro.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnFoxPro : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.FolderBrowserDialog dlgFolder;
        private System.Windows.Forms.Button btnFile;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.TextBox txtUserId;
        private System.Windows.Forms.Label label2;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnFoxPro()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.dlgFolder = new System.Windows.Forms.FolderBrowserDialog();
            this.btnFile = new System.Windows.Forms.Button();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.txtUserId = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.btnFile.Location = new System.Drawing.Point(321, 30);
            this.btnFile.Name = "btnFile";
            this.btnFile.Size = new System.Drawing.Size(24, 24);
            this.btnFile.TabIndex = 25;
            this.btnFile.Text = "...";
            this.btnFile.Click += new System.EventHandler(this.btnFile_Click);
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(203, 21);
            this.txtDataSource.TabIndex = 24;
            this.txtDataSource.Text = "c:\\db\\";
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 23;
            this.label1.Text = "Data Source";
            // 
            this.txtPassword.Location = new System.Drawing.Point(112, 80);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.Size = new System.Drawing.Size(232, 21);
            this.txtPassword.TabIndex = 29;
            this.txtPassword.Text = "password";
            // 
            this.label3.Location = new System.Drawing.Point(8, 80);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(64, 23);
            this.label3.TabIndex = 28;
            this.label3.Text = "Password";
            // 
            this.txtUserId.Location = new System.Drawing.Point(112, 56);
            this.txtUserId.Name = "txtUserId";
            this.txtUserId.Size = new System.Drawing.Size(232, 21);
            this.txtUserId.TabIndex = 27;
            this.txtUserId.Text = "userId";
            // 
            this.label2.Location = new System.Drawing.Point(8, 56);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(64, 23);
            this.label2.TabIndex = 26;
            this.label2.Text = "User Id";
            // 
            this.Controls.Add(this.txtPassword);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtUserId);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.btnFile);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnFoxPro";
            this.Size = new System.Drawing.Size(480, 150);
            this.Load += new System.EventHandler(this.ConnFoxPro_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }
		#endregion

        private void ConnFoxPro_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)"
            };
        }

        private void btnFile_Click(object sender, System.EventArgs e)
        {
            if (DialogResult.OK == this.dlgFolder.ShowDialog(this))
            {
                this.txtDataSource.Text = this.dlgFolder.SelectedPath;
            }
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            @"Driver={{Microsoft dBASE Driver (*.dbf)}}; DriverID=277; Dbq={0}; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text
                            );
                    case 1:
                        return string.Format(
                            @"Provider=Microsoft.Jet.OLEDB.4.0; Data Source={0}; User ID={1}; Password={2}; Extended Properties=dBASE IV;",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text
                            );
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnFoxPro.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgFolder.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>


【文件】 \Conn\ConnInformix.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnInformix : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnInformix()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnInformix";
            this.Size = new System.Drawing.Size(496, 150);
            this.Load += new System.EventHandler(this.ConnInformix_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnInformix_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                    case 1:
                    case 2:
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnInformix.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.Name">
    <value>ConnInformix</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnInterbase.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnInterbase : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnInterbase()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnInterbase";
            this.Size = new System.Drawing.Size(504, 150);
            this.Load += new System.EventHandler(this.ConnInterbase_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnInterbase_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return "";
                    case 1:
                        return "";
                    case 2:
                        return "";
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnInterbase.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.Name">
    <value>ConnInterbase</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnMimerSQL.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnMimerSQL : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnMimerSQL()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnMimerSQL";
            this.Size = new System.Drawing.Size(552, 150);
            this.Load += new System.EventHandler(this.ConnMimerSQL_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnMimerSQL_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return "";
                    case 1:
                        return "";
                    case 2:
                        return "";
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnMimerSQL.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Name">
    <value>ConnMimerSQL</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnMySql.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnMySql : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnMySql()
		{
			InitializeComponent();
		}

		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 21;
            // 
            this.label5.Location = new System.Drawing.Point(8, 16);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 20;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnMySql";
            this.Size = new System.Drawing.Size(552, 184);
            this.Load += new System.EventHandler(this.ConnMySql_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnMySql_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC Local",
                "ODBC Remote",
                "OLE DB, OleDbConnection (.NET)",
                "MySqlConnection (.NET): eInfoDesigns.dbProvider",
                "MySqlConnection (.NET): SevenObjects MySqlClient",
                "MySqlConnection (.NET): Core Labs MySQLDirect"
            };
        }

    
        public string ConnectionString
        {
            get 
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            "Driver={{mySQL}}; Server=mySrvName; Option=16834; Database=mydatabase;"
                            );
                    case 1:
                        return string.Format(
                            "Driver={{mySQL}}; Server=data.domain.com; Port=3306; Option=131072; Stmt=; Database=my-database; Uid=username; Pwd=password;"
                            );
                    case 2:
                        return string.Format(
                            "Provider=MySQLProv; Data Source=mydb; User Id=UserName; Password=asdasd;"
                            );
                    case 3:
                        return string.Format(
                            "DataSource=server; Database= mydb; UserID=username; Password=pwd; Command Logging=false;"
                            );
                    case 4:
                        return string.Format(
                            "Host=server; UserName=myusername; Password=mypassword; Database=mydb;"
                            );
                    case 5:
                        return string.Format(
                            "User ID=root; Password=pwd; Host=localhost; Port= 3306; Database=test; Direct=true; Protocol=TCP; Compress=false; Pooling=true; Min Pool Size=0; Max Pool Size=100; Connection Lifetime=0;"
                            );
                    default:
                        return "";
                }
            }
        }
    }
}


【文件】 \Conn\ConnMySql.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Name">
    <value>ConnMySql</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnOracle.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnOracle : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.TextBox txtUserId;
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;

		private System.ComponentModel.Container components = null;
		public ConnOracle()
		{
			InitializeComponent();
		}
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.label1 = new System.Windows.Forms.Label();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.txtUserId = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 0;
            this.label1.Text = "Data Source";
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(232, 21);
            this.txtDataSource.TabIndex = 1;
            this.txtDataSource.Text = "dataSource";
            // 
            this.txtUserId.Location = new System.Drawing.Point(112, 56);
            this.txtUserId.Name = "txtUserId";
            this.txtUserId.Size = new System.Drawing.Size(232, 21);
            this.txtUserId.TabIndex = 3;
            this.txtUserId.Text = "userId";
            // 
            this.label2.Location = new System.Drawing.Point(8, 56);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(64, 23);
            this.label2.TabIndex = 2;
            this.label2.Text = "User Id";
            // 
            this.txtPassword.Location = new System.Drawing.Point(112, 80);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.Size = new System.Drawing.Size(232, 21);
            this.txtPassword.TabIndex = 5;
            this.txtPassword.Text = "password";
            // 
            this.label3.Location = new System.Drawing.Point(8, 80);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(64, 23);
            this.label3.TabIndex = 4;
            this.label3.Text = "Password";
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 17;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 16;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.txtPassword);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtUserId);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Name = "ConnOracle";
            this.Size = new System.Drawing.Size(432, 128);
            this.Load += new System.EventHandler(this.ConnOracle_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnOracle_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC New",
                "ODBC Old",
                "OLE DB, OleDbConnection (.NET)",
                "OracleConnection (.NET)",
                "Core Labs OraDirect (.NET)",
                "MS Data Shape"
            };
        }

    
        public string ConnectionString
        {
            get 
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            "Driver={{Microsoft ODBC for Oracle}}; Server={0}; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 1:
                        return string.Format(
                            "Driver={{Microsoft ODBC Driver for Oracle}}; ConnectString={0}; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 2:
                        return string.Format(
                            "Provider=OraOLEDB.Oracle.1; Data source={0}; User id={1}; Password={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 3:
                        return string.Format(
                            "Data Source={0}; User id={1}; Password={2}",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 4:
                        return string.Format(
                            "Host={0}; User ID={1}; Password={2}; Pooling=true; Min Pool Size=0; Max Pool Size=100; Connection Lifetime=0;",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 5:
                        return string.Format(
                            "Provider=MSDataShape.1; Persist Security Info=False; Data Provider=MSDAORA; Data Source={0}; userid={1}; password={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    default:
                        return "";
                }
            }
        }
    }
}


【文件】 \Conn\ConnOracle.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label1.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label1.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtDataSource.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtDataSource.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="txtDataSource.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtUserId.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtUserId.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="txtUserId.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label2.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label2.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label2.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtPassword.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtPassword.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtPassword.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label3.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label3.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label3.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.Name">
    <value>ConnOracle</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnPervasive.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnPervasive : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnPervasive()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnPervasive";
            this.Size = new System.Drawing.Size(472, 150);
            this.Load += new System.EventHandler(this.ConnPervasive_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnPervasive_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }
    
        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return "";
                    case 1:
                        return "";
                    case 2:
                        return "";
                    default:
                        return "";
                }
            }
        }    

    }
}


【文件】 \Conn\ConnPervasive.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.Name">
    <value>ConnPervasive</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnPostgreSQL.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnPostgreSQL : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnPostgreSQL()
		{
			InitializeComponent();
		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnPostgreSQL";
            this.Size = new System.Drawing.Size(496, 150);
            this.Load += new System.EventHandler(this.ConnPostgreSQL_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnPostgreSQL_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return "";
                    case 1:
                        return "";
                    case 2:
                        return "";
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnPostgreSQL.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
  <data name="$this.Name">
    <value>ConnPostgreSQL</value>
  </data>
</root>


【文件】 \Conn\ConnSqlServer.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnSqlServer : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.TextBox txtUserId;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.TextBox txtInit;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.ComboBox cmbType;

        private System.ComponentModel.Container components = null;
		public ConnSqlServer()
		{
			InitializeComponent();
		}
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.txtUserId = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.txtInit = new System.Windows.Forms.TextBox();
            this.label4 = new System.Windows.Forms.Label();
            this.label5 = new System.Windows.Forms.Label();
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.SuspendLayout();
            // 
            this.txtPassword.Location = new System.Drawing.Point(112, 104);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.Size = new System.Drawing.Size(232, 21);
            this.txtPassword.TabIndex = 11;
            this.txtPassword.Text = "password";
            // 
            this.label3.Location = new System.Drawing.Point(8, 104);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(64, 23);
            this.label3.TabIndex = 10;
            this.label3.Text = "Password";
            // 
            this.txtUserId.Location = new System.Drawing.Point(112, 80);
            this.txtUserId.Name = "txtUserId";
            this.txtUserId.Size = new System.Drawing.Size(232, 21);
            this.txtUserId.TabIndex = 9;
            this.txtUserId.Text = "userId";
            // 
            this.label2.Location = new System.Drawing.Point(8, 80);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(64, 23);
            this.label2.TabIndex = 8;
            this.label2.Text = "User Id";
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(232, 21);
            this.txtDataSource.TabIndex = 7;
            this.txtDataSource.Text = "dataSource";
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 6;
            this.label1.Text = "Data Source";
            // 
            this.txtInit.Location = new System.Drawing.Point(112, 56);
            this.txtInit.Name = "txtInit";
            this.txtInit.Size = new System.Drawing.Size(232, 21);
            this.txtInit.TabIndex = 13;
            this.txtInit.Text = "initDb";
            // 
            this.label4.Location = new System.Drawing.Point(8, 56);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(104, 23);
            this.label4.TabIndex = 12;
            this.label4.Text = "Initial Catalog";
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 23);
            this.label5.TabIndex = 14;
            this.label5.Text = "Conn Type";
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 15;
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.txtInit);
            this.Controls.Add(this.label4);
            this.Controls.Add(this.txtPassword);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtUserId);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Name = "ConnSqlServer";
            this.Size = new System.Drawing.Size(576, 264);
            this.Load += new System.EventHandler(this.ConnSqlServer_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnSqlServer_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        
        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }
    
        public string ConnectionString
        {
            get 
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            "Driver={{SQL Server}};Server={0}; Database={1}; Uid={2}; Pwd={3};",
                            this.txtDataSource.Text,
                            this.txtInit.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 1:
                        return string.Format(
                            "Provider=SqlOLEDB; Data source={0}; Initial Catalog={1}; User id={2}; Password={3};",
                            this.txtDataSource.Text,
                            this.txtInit.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 2:
                        return string.Format(
                            "Data Source={0}; Initial Catalog={1}; User={2}; Password={3};",
                            this.txtDataSource.Text,
                            this.txtInit.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 3:
                        return string.Format(
                            "Provider=MSDataShape; Data Provider=SQLOLEDB; Data Source={0}; Initial Catalog={1}; UserID={2}; Password={3};",
                            this.txtDataSource.Text,
                            this.txtInit.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    default:
                        return "";
                }
            }
        }
    }
}


【文件】 \Conn\ConnSqlServer.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtPassword.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtPassword.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="txtPassword.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label3.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label3.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label3.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtUserId.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtUserId.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="txtUserId.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label2.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label2.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label2.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtDataSource.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtDataSource.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="txtDataSource.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label1.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label1.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label1.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtInit.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="txtInit.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="txtInit.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label4.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label4.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label4.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.Name">
    <value>ConnSqlServer</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnSybase.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnSybase : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnSybase()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnSybase";
            this.Size = new System.Drawing.Size(544, 150);
            this.Load += new System.EventHandler(this.ConnSybase_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnSybase_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return "";
                    case 1:
                        return "";
                    case 2:
                        return "";
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnSybase.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Name">
    <value>ConnSybase</value>
  </data>
</root>


【文件】 \Conn\ConnTeradata.cs
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
    public partial class ConnTeradata : UserControl, IConnectionString
    {
        public ConnTeradata()
        {
            InitializeComponent();
        }

        private void ConnTeradata_Load(object sender, EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "Teradata .Net driver",
                "Teradata ODBC Driver",
                "OLE DB Provider for Teradata",
                ".NET Framework Data Provider for OLE DB",
                ".NET Framework Data Provider for ODBC"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            "Data Source={0}; User ID={1}; Password={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 1:
                        return string.Format(
                            "Provider=Teradata; DBCName=MyDbcName; Database={0}; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 2:
                        return string.Format(
                            "Provider=TDOLEDB; Data Source={0}; User ID={1}; Password={2}; Persist Security Info=True; Session Mode=ANSI;",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 3:
                        return string.Format(
                            "Provider=TDOLEDB; Data Source={0}; User ID={1}; Password={2}; Persist Security Info=True; Session Mode=ANSI;",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    case 4:
                        return string.Format(
                            "Provider=Teradata; DBCName=MyDbcName; Database={0}; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text);
                    default:
                        return "";
                }
            }
        }
    }
}


【文件】 \Conn\ConnTeradata.Designer.cs
namespace ConnectionString.Conn
{
    partial class ConnTeradata
    {
        /// <summary> 
        private System.ComponentModel.IContainer components = null;

        /// <summary> 
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region 组件设计器生成的代码

        /// <summary> 
        private void InitializeComponent()
        {
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.txtUserId = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(232, 20);
            this.cmbType.TabIndex = 25;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 24;
            this.label5.Text = "Conn Type";
            // 
            this.txtPassword.Location = new System.Drawing.Point(112, 80);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.Size = new System.Drawing.Size(232, 21);
            this.txtPassword.TabIndex = 23;
            this.txtPassword.Text = "password";
            // 
            this.label3.Location = new System.Drawing.Point(8, 80);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(64, 23);
            this.label3.TabIndex = 22;
            this.label3.Text = "Password";
            // 
            this.txtUserId.Location = new System.Drawing.Point(112, 56);
            this.txtUserId.Name = "txtUserId";
            this.txtUserId.Size = new System.Drawing.Size(232, 21);
            this.txtUserId.TabIndex = 21;
            this.txtUserId.Text = "userId";
            // 
            this.label2.Location = new System.Drawing.Point(8, 56);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(64, 23);
            this.label2.TabIndex = 20;
            this.label2.Text = "User Id";
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(232, 21);
            this.txtDataSource.TabIndex = 19;
            this.txtDataSource.Text = "dataSource";
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 18;
            this.label1.Text = "Data Source";
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 12F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.txtPassword);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtUserId);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Name = "ConnTeradata";
            this.Size = new System.Drawing.Size(414, 154);
            this.Load += new System.EventHandler(this.ConnTeradata_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.TextBox txtUserId;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
    }
}


【文件】 \Conn\ConnTeradata.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>


【文件】 \Conn\ConnText.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnText : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.Button btnFile;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.FolderBrowserDialog dlgFolder;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnText()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.btnFile = new System.Windows.Forms.Button();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.dlgFolder = new System.Windows.Forms.FolderBrowserDialog();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(240, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.btnFile.Location = new System.Drawing.Point(328, 30);
            this.btnFile.Name = "btnFile";
            this.btnFile.Size = new System.Drawing.Size(24, 24);
            this.btnFile.TabIndex = 22;
            this.btnFile.Text = "...";
            this.btnFile.Click += new System.EventHandler(this.btnFile_Click);
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(210, 21);
            this.txtDataSource.TabIndex = 21;
            this.txtDataSource.Text = "c:\\db\\";
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 20;
            this.label1.Text = "Data Source";
            // 
            this.Controls.Add(this.btnFile);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnText";
            this.Size = new System.Drawing.Size(536, 150);
            this.Load += new System.EventHandler(this.ConnText_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }
		#endregion

        private void ConnText_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)"
            };
        }

        private void btnFile_Click(object sender, System.EventArgs e)
        {
            if (DialogResult.OK == this.dlgFolder.ShowDialog(this))
            {
                this.txtDataSource.Text = this.dlgFolder.SelectedPath;
            }
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            @"Driver={{Microsoft Text Driver (*.txt; *.csv)}}; Dbq={0}; Extensions=asc,csv,tab,txt;",
                            this.txtDataSource.Text
                            );
                    case 1:
                        return string.Format(
                            @"Provider=Microsoft.Jet.OLEDB.4.0; Data Source={0}; ExtendedProperties='text; HDR=Yes; FMT=Delimited'",
                            this.txtDataSource.Text
                            );
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnText.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgFolder.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>


【文件】 \Conn\ConnUDL.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnUDL : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnUDL()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(240, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnUDL";
            this.Size = new System.Drawing.Size(512, 150);
            this.Load += new System.EventHandler(this.ConnUDL_Load);
            this.ResumeLayout(false);

        }
		#endregion

        private void ConnUDL_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC",
                "OLE DB, OleDbConnection (.NET)",
                "SqlConnection (.NET)",
                "MS Data Shape"
            };
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return "";
                    case 1:
                        return "";
                    case 2:
                        return "";
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnUDL.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmbType.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="cmbType.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="cmbType.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="label5.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="label5.Modifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.Name">
    <value>ConnUDL</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
</root>


【文件】 \Conn\ConnVisualFoxPro.cs
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;

namespace ConnectionString.Conn
{
	/// <summary>
	public class ConnVisualFoxPro : System.Windows.Forms.UserControl, IConnectionString
	{
        private System.Windows.Forms.ComboBox cmbType;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.TextBox txtPassword;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.TextBox txtUserId;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.Button btnFile;
        private System.Windows.Forms.TextBox txtDataSource;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.FolderBrowserDialog dlgFolder;
        private System.Windows.Forms.OpenFileDialog dlgOpenFile;
		/// <summary> 
		private System.ComponentModel.Container components = null;

		public ConnVisualFoxPro()
		{
			// �õ����� Windows.Forms ���������������ġ�
			InitializeComponent();

			// TODO: �� InitializeComponent ���ú�����κγ�ʼ��

		}

		/// <summary> 
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region �����������ɵĴ���
		/// <summary> 
		private void InitializeComponent()
		{
            this.cmbType = new System.Windows.Forms.ComboBox();
            this.label5 = new System.Windows.Forms.Label();
            this.txtPassword = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.txtUserId = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.btnFile = new System.Windows.Forms.Button();
            this.txtDataSource = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.dlgFolder = new System.Windows.Forms.FolderBrowserDialog();
            this.dlgOpenFile = new System.Windows.Forms.OpenFileDialog();
            this.SuspendLayout();
            // 
            this.cmbType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cmbType.Location = new System.Drawing.Point(112, 8);
            this.cmbType.Name = "cmbType";
            this.cmbType.Size = new System.Drawing.Size(233, 20);
            this.cmbType.TabIndex = 19;
            // 
            this.label5.Location = new System.Drawing.Point(8, 8);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(64, 16);
            this.label5.TabIndex = 18;
            this.label5.Text = "Conn Type";
            // 
            this.txtPassword.Location = new System.Drawing.Point(112, 80);
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.Size = new System.Drawing.Size(232, 21);
            this.txtPassword.TabIndex = 36;
            this.txtPassword.Text = "password";
            // 
            this.label3.Location = new System.Drawing.Point(8, 80);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(64, 23);
            this.label3.TabIndex = 35;
            this.label3.Text = "Password";
            // 
            this.txtUserId.Location = new System.Drawing.Point(112, 56);
            this.txtUserId.Name = "txtUserId";
            this.txtUserId.Size = new System.Drawing.Size(232, 21);
            this.txtUserId.TabIndex = 34;
            this.txtUserId.Text = "userId";
            // 
            this.label2.Location = new System.Drawing.Point(8, 56);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(64, 23);
            this.label2.TabIndex = 33;
            this.label2.Text = "User Id";
            // 
            this.btnFile.Location = new System.Drawing.Point(319, 30);
            this.btnFile.Name = "btnFile";
            this.btnFile.Size = new System.Drawing.Size(24, 24);
            this.btnFile.TabIndex = 32;
            this.btnFile.Text = "...";
            this.btnFile.Click += new System.EventHandler(this.btnFile_Click);
            // 
            this.txtDataSource.Location = new System.Drawing.Point(112, 32);
            this.txtDataSource.Name = "txtDataSource";
            this.txtDataSource.Size = new System.Drawing.Size(200, 21);
            this.txtDataSource.TabIndex = 31;
            this.txtDataSource.Text = "c:\\db\\";
            // 
            this.label1.Location = new System.Drawing.Point(8, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 23);
            this.label1.TabIndex = 30;
            this.label1.Text = "Data Source";
            // 
            this.dlgOpenFile.Filter = "DBC (*.dbc)|*.dbc|All files (*.*)|*.*";
            this.dlgOpenFile.RestoreDirectory = true;
            // 
            this.Controls.Add(this.txtPassword);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtUserId);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.btnFile);
            this.Controls.Add(this.txtDataSource);
            this.Controls.Add(this.label1);
            this.Controls.Add(this.cmbType);
            this.Controls.Add(this.label5);
            this.Name = "ConnVisualFoxPro";
            this.Size = new System.Drawing.Size(472, 150);
            this.Load += new System.EventHandler(this.ConnVisualFoxPro_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }
		#endregion

        private void ConnVisualFoxPro_Load(object sender, System.EventArgs e)
        {
            BindCmbType();
        }

        void BindCmbType()
        {
            this.cmbType.DataSource = new string[]
            {
                "ODBC: Database container (.DBC)",
                "ODBC: Free Table directory",
                "OLE DB, OleDbConnection (.NET): Database container (.DBC)",
                "OLE DB, OleDbConnection (.NET): Free Table directory"
            };
        }

        private void btnFile_Click(object sender, System.EventArgs e)
        {
            switch (this.cmbType.SelectedIndex)
            {
                case 0:
                case 2:
                    if (DialogResult.OK == this.dlgOpenFile.ShowDialog(this))
                        this.txtDataSource.Text = this.dlgOpenFile.FileName;
                    break;
                case 1:
                case 3:
                    if (DialogResult.OK == this.dlgFolder.ShowDialog(this))
                        this.txtDataSource.Text = this.dlgFolder.SelectedPath;
                    break;
                default:
                    break;
            }
        }

        public string ConnectionString
        {
            get
            {
                switch (this.cmbType.SelectedIndex)
                {
                    case 0:
                        return string.Format(
                            @"Driver={{Microsoft Visual FoxPro Driver}}; SourceType=DBC; SourceDB={0}; Exclusive=No; Collate=Machine; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text
                            );
                    case 1:
                        return string.Format(
                            @"Driver={{MicrosoftVisualFoxProDriver}}; SourceType=DBF; SourceDB={0}; Exclusive=No; Collate=Machine; Uid={1}; Pwd={2};",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text
                            );
                    case 2:
                        return string.Format(
                            @"Provider=vfpoledb.1; Data Source={0}; User Id={1}; Password={2}; Collating Sequence=machine;",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text
                            );
                    case 3:
                        return string.Format(
                            @"Provider=vfpoledb.1; Data Source={0}; User Id={1}; Password={2}; Collating Sequence=general;",
                            this.txtDataSource.Text,
                            this.txtUserId.Text,
                            this.txtPassword.Text
                            );
                    default:
                        return "";
                }
            }
        }    
    
    }
}


【文件】 \Conn\ConnVisualFoxPro.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgFolder.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
</root>


【文件】 \obj\Debug\ConnectionString.csproj.FileListAbsolute.txt
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.exe
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.pdb
E:\Coding\KevinStudio\ConnectionString\ConnectionString\bin\Debug\ConnectionString.exe
E:\Coding\KevinStudio\ConnectionString\ConnectionString\bin\Debug\ConnectionString.pdb
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ResolveAssemblyReference.cache
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnAccess.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnDB2.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnDSN.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnExcel.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnFoxPro.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnInformix.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnInterbase.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnMimerSQL.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnMySql.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnOracle.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnPervasive.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnPostgreSQL.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnSqlServer.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnSybase.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnText.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnUDL.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnVisualFoxPro.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.FormConnectionString.resources
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.csproj.GenerateResource.Cache
E:\Coding\KevinStudio\ConnectionString\ConnectionString\obj\Debug\ConnectionString.Conn.ConnTeradata.resources


【文件】 \AssemblyInfo.cs
using System.Reflection;
using System.Runtime.CompilerServices;

//
[assembly: AssemblyTitle("")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("")]
[assembly: AssemblyCopyright("")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]		

//

[assembly: AssemblyVersion("1.0.*")]

//
[assembly: AssemblyDelaySign(false)]
[assembly: AssemblyKeyFile("")]
[assembly: AssemblyKeyName("")]


【文件】 \Common.cs
using System;
using System.Windows.Forms;
using System.Xml.Serialization;

namespace ConnectionString
{
    public interface IConnectionString
    {
        string ConnectionString {get;}
    }

	public class Common
	{
        /// Ӧ�ó��������ڵ㡣
        [STAThread]
        static void Main() 
        {
            Application.Run(new FormConnectionString());
        }
	}
}


【文件】 \ConnectionString.csproj
<Project DefaultTargets="Build" ToolsVersion="3.5" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectType>Local</ProjectType>
    <ProductVersion>9.0.30729</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E11BADB4-96C7-4363-A588-D9010414E0DC}</ProjectGuid>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ApplicationIcon>App.ico</ApplicationIcon>
    <AssemblyKeyContainerName>
    </AssemblyKeyContainerName>
    <AssemblyName>ConnectionString</AssemblyName>
    <AssemblyOriginatorKeyFile>
    </AssemblyOriginatorKeyFile>
    <DefaultClientScript>JScript</DefaultClientScript>
    <DefaultHTMLPageLayout>Grid</DefaultHTMLPageLayout>
    <DefaultTargetSchema>IE50</DefaultTargetSchema>
    <DelaySign>false</DelaySign>
    <OutputType>WinExe</OutputType>
    <RootNamespace>ConnectionString</RootNamespace>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    <StartupObject>
    </StartupObject>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <OldToolsVersion>0.0</OldToolsVersion>
    <UpgradeBackupLocation>
    </UpgradeBackupLocation>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>bin\Debug\</OutputPath>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <BaseAddress>285212672</BaseAddress>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <ConfigurationOverrideFile>
    </ConfigurationOverrideFile>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DocumentationFile>
    </DocumentationFile>
    <DebugSymbols>true</DebugSymbols>
    <FileAlignment>4096</FileAlignment>
    <NoStdLib>false</NoStdLib>
    <NoWarn>
    </NoWarn>
    <Optimize>false</Optimize>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <DebugType>full</DebugType>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release\</OutputPath>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <BaseAddress>285212672</BaseAddress>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <ConfigurationOverrideFile>
    </ConfigurationOverrideFile>
    <DefineConstants>TRACE</DefineConstants>
    <DocumentationFile>
    </DocumentationFile>
    <DebugSymbols>false</DebugSymbols>
    <FileAlignment>4096</FileAlignment>
    <NoStdLib>false</NoStdLib>
    <NoWarn>
    </NoWarn>
    <Optimize>true</Optimize>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <DebugType>none</DebugType>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System">
      <Name>System</Name>
    </Reference>
    <Reference Include="System.Data">
      <Name>System.Data</Name>
    </Reference>
    <Reference Include="System.Drawing">
      <Name>System.Drawing</Name>
    </Reference>
    <Reference Include="System.Windows.Forms">
      <Name>System.Windows.Forms</Name>
    </Reference>
    <Reference Include="System.Xml">
      <Name>System.XML</Name>
    </Reference>
    <Reference Include="Tool">
      <Name>Tool</Name>
      <HintPath>bin\Debug\Tool.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="App.ico" />
    <Compile Include="AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Common.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Conn\ConnAccess.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnDB2.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnDSN.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnExcel.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnFoxPro.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnInformix.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnInterbase.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnMimerSQL.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnMySql.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnOracle.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnPervasive.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnPostgreSQL.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnSqlServer.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnSybase.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnTeradata.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnTeradata.Designer.cs">
      <DependentUpon>ConnTeradata.cs</DependentUpon>
    </Compile>
    <Compile Include="Conn\ConnText.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnUDL.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Conn\ConnVisualFoxPro.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="FormConnectionString.cs">
      <SubType>Form</SubType>
    </Compile>
    <EmbeddedResource Include="Conn\ConnAccess.resx">
      <DependentUpon>ConnAccess.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnDB2.resx">
      <DependentUpon>ConnDB2.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnDSN.resx">
      <DependentUpon>ConnDSN.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnExcel.resx">
      <DependentUpon>ConnExcel.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnFoxPro.resx">
      <DependentUpon>ConnFoxPro.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnInformix.resx">
      <DependentUpon>ConnInformix.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnInterbase.resx">
      <DependentUpon>ConnInterbase.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnMimerSQL.resx">
      <DependentUpon>ConnMimerSQL.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnMySql.resx">
      <DependentUpon>ConnMySql.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnOracle.resx">
      <DependentUpon>ConnOracle.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnPervasive.resx">
      <DependentUpon>ConnPervasive.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnPostgreSQL.resx">
      <DependentUpon>ConnPostgreSQL.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnSqlServer.resx">
      <DependentUpon>ConnSqlServer.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnSybase.resx">
      <DependentUpon>ConnSybase.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnTeradata.resx">
      <DependentUpon>ConnTeradata.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnText.resx">
      <DependentUpon>ConnText.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnUDL.resx">
      <DependentUpon>ConnUDL.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Conn\ConnVisualFoxPro.resx">
      <DependentUpon>ConnVisualFoxPro.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="FormConnectionString.resx">
      <DependentUpon>FormConnectionString.cs</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
</Project>


【文件】 \ConnectionString.sln
Microsoft Visual Studio Solution File, Format Version 10.00
# Visual Studio 2008
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ConnectionString", "ConnectionString.csproj", "{E11BADB4-96C7-4363-A588-D9010414E0DC}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{E11BADB4-96C7-4363-A588-D9010414E0DC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{E11BADB4-96C7-4363-A588-D9010414E0DC}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{E11BADB4-96C7-4363-A588-D9010414E0DC}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{E11BADB4-96C7-4363-A588-D9010414E0DC}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
EndGlobal


【文件】 \FormConnectionString.cs
using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Configuration;
using System.Xml;
using System.Xml.Serialization;
using System.Reflection;
using System.Runtime.Remoting;
using Tool.Security;

namespace ConnectionString
{
    ////////////////////////////////////////////////////////////////////////
	public class FormConnectionString : System.Windows.Forms.Form
	{
        private System.Windows.Forms.TabControl tabConn;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtConnStr;
        private System.Windows.Forms.TextBox txtKey;
        private System.Windows.Forms.Button btnGenEncodeFile;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.Button btnGenConnStr;
        private System.Windows.Forms.SaveFileDialog dlgSaveFile;
        private System.Windows.Forms.Button btnDecodeFile;
        private System.Windows.Forms.OpenFileDialog dlgOpenFile;
        private System.Windows.Forms.LinkLabel lnk;
        private System.ComponentModel.IContainer components;

        //
        public string ConfigFile = @"cfg.xml";
        private System.Windows.Forms.ImageList imgs;
        private System.Windows.Forms.PictureBox pic;
        private LinkLabel lnkReference;
        private Button btnCopy;
        public ConnPanelCfgs Cfgs = new ConnPanelCfgs();

		#region Windows ������������ɵĴ���
		/// <summary>
		private void InitializeComponent()
		{
            this.components = new System.ComponentModel.Container();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormConnectionString));
            this.tabConn = new System.Windows.Forms.TabControl();
            this.imgs = new System.Windows.Forms.ImageList(this.components);
            this.txtConnStr = new System.Windows.Forms.TextBox();
            this.label1 = new System.Windows.Forms.Label();
            this.label2 = new System.Windows.Forms.Label();
            this.txtKey = new System.Windows.Forms.TextBox();
            this.btnGenEncodeFile = new System.Windows.Forms.Button();
            this.label3 = new System.Windows.Forms.Label();
            this.btnGenConnStr = new System.Windows.Forms.Button();
            this.dlgSaveFile = new System.Windows.Forms.SaveFileDialog();
            this.btnDecodeFile = new System.Windows.Forms.Button();
            this.dlgOpenFile = new System.Windows.Forms.OpenFileDialog();
            this.lnk = new System.Windows.Forms.LinkLabel();
            this.pic = new System.Windows.Forms.PictureBox();
            this.lnkReference = new System.Windows.Forms.LinkLabel();
            this.btnCopy = new System.Windows.Forms.Button();
            ((System.ComponentModel.ISupportInitialize)(this.pic)).BeginInit();
            this.SuspendLayout();
            // 
            this.tabConn.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)
                        | System.Windows.Forms.AnchorStyles.Right)));
            this.tabConn.ImageList = this.imgs;
            this.tabConn.Location = new System.Drawing.Point(88, 8);
            this.tabConn.Name = "tabConn";
            this.tabConn.SelectedIndex = 0;
            this.tabConn.Size = new System.Drawing.Size(569, 203);
            this.tabConn.TabIndex = 0;
            // 
            this.imgs.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imgs.ImageStream")));
            this.imgs.TransparentColor = System.Drawing.Color.Transparent;
            this.imgs.Images.SetKeyName(0, "");
            this.imgs.Images.SetKeyName(1, "");
            this.imgs.Images.SetKeyName(2, "");
            this.imgs.Images.SetKeyName(3, "");
            this.imgs.Images.SetKeyName(4, "");
            this.imgs.Images.SetKeyName(5, "");
            this.imgs.Images.SetKeyName(6, "");
            this.imgs.Images.SetKeyName(7, "");
            // 
            this.txtConnStr.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)
                        | System.Windows.Forms.AnchorStyles.Right)));
            this.txtConnStr.Location = new System.Drawing.Point(88, 232);
            this.txtConnStr.Multiline = true;
            this.txtConnStr.Name = "txtConnStr";
            this.txtConnStr.Size = new System.Drawing.Size(467, 37);
            this.txtConnStr.TabIndex = 1;
            this.txtConnStr.Text = "Provider=OraOLEDB.Oracle; Data Source=OADB; User Id=; Password=;\r\n";
            // 
            this.label1.Location = new System.Drawing.Point(8, 229);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(72, 40);
            this.label1.TabIndex = 2;
            this.label1.Text = "Connection String";
            // 
            this.label2.Location = new System.Drawing.Point(8, 288);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(48, 23);
            this.label2.TabIndex = 3;
            this.label2.Text = "DES Key";
            // 
            this.txtKey.Location = new System.Drawing.Point(88, 288);
            this.txtKey.MaxLength = 8;
            this.txtKey.Name = "txtKey";
            this.txtKey.Size = new System.Drawing.Size(112, 21);
            this.txtKey.TabIndex = 4;
            this.txtKey.Text = "DESKEY64";
            // 
            this.btnGenEncodeFile.Location = new System.Drawing.Point(206, 286);
            this.btnGenEncodeFile.Name = "btnGenEncodeFile";
            this.btnGenEncodeFile.Size = new System.Drawing.Size(96, 23);
            this.btnGenEncodeFile.TabIndex = 5;
            this.btnGenEncodeFile.Text = "&EncodeFile";
            this.btnGenEncodeFile.Click += new System.EventHandler(this.btnGenEncodeFile_Click);
            // 
            this.label3.Location = new System.Drawing.Point(8, 16);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(56, 23);
            this.label3.TabIndex = 6;
            this.label3.Text = "Database";
            // 
            this.btnGenConnStr.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.btnGenConnStr.Location = new System.Drawing.Point(566, 36);
            this.btnGenConnStr.Name = "btnGenConnStr";
            this.btnGenConnStr.Size = new System.Drawing.Size(79, 90);
            this.btnGenConnStr.TabIndex = 7;
            this.btnGenConnStr.Text = "&Generate\r\nconnection\r\nstring";
            this.btnGenConnStr.Click += new System.EventHandler(this.btnGenConnStr_Click);
            // 
            this.dlgSaveFile.Filter = "DES encode files (*.des)|*.des|All files (*.*)|*.*";
            // 
            this.btnDecodeFile.Location = new System.Drawing.Point(308, 286);
            this.btnDecodeFile.Name = "btnDecodeFile";
            this.btnDecodeFile.Size = new System.Drawing.Size(96, 23);
            this.btnDecodeFile.TabIndex = 10;
            this.btnDecodeFile.Text = "&DecodeFile";
            this.btnDecodeFile.Click += new System.EventHandler(this.btnDecodeFile_Click);
            // 
            this.dlgOpenFile.Filter = "DES encode files (*.des)|*.des|All files (*.*)|*.*";
            // 
            this.lnk.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.lnk.LinkBehavior = System.Windows.Forms.LinkBehavior.AlwaysUnderline;
            this.lnk.Location = new System.Drawing.Point(469, 286);
            this.lnk.Name = "lnk";
            this.lnk.Size = new System.Drawing.Size(188, 16);
            this.lnk.TabIndex = 11;
            this.lnk.TabStop = true;
            this.lnk.Text = "See. surfsky.cnblogs.com";
            this.lnk.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.lnk_LinkClicked);
            // 
            this.pic.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.pic.Image = ((System.Drawing.Image)(resources.GetObject("pic.Image")));
            this.pic.Location = new System.Drawing.Point(437, 289);
            this.pic.Name = "pic";
            this.pic.Size = new System.Drawing.Size(16, 24);
            this.pic.TabIndex = 12;
            this.pic.TabStop = false;
            this.pic.DoubleClick += new System.EventHandler(this.pic_DoubleClick);
            // 
            this.lnkReference.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.lnkReference.LinkBehavior = System.Windows.Forms.LinkBehavior.AlwaysUnderline;
            this.lnkReference.Location = new System.Drawing.Point(469, 302);
            this.lnkReference.Name = "lnkReference";
            this.lnkReference.Size = new System.Drawing.Size(188, 14);
            this.lnkReference.TabIndex = 13;
            this.lnkReference.TabStop = true;
            this.lnkReference.Text = "Ref. www.connectionstrings.com";
            this.lnkReference.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.lnkReference_LinkClicked);
            // 
            this.btnCopy.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.btnCopy.Location = new System.Drawing.Point(566, 232);
            this.btnCopy.Name = "btnCopy";
            this.btnCopy.Size = new System.Drawing.Size(91, 37);
            this.btnCopy.TabIndex = 14;
            this.btnCopy.Text = "&Copy";
            this.btnCopy.Click += new System.EventHandler(this.btnCopy_Click);
            // 
            this.AutoScaleBaseSize = new System.Drawing.Size(6, 14);
            this.ClientSize = new System.Drawing.Size(665, 332);
            this.Controls.Add(this.btnCopy);
            this.Controls.Add(this.lnkReference);
            this.Controls.Add(this.pic);
            this.Controls.Add(this.lnk);
            this.Controls.Add(this.btnDecodeFile);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.btnGenEncodeFile);
            this.Controls.Add(this.txtKey);
            this.Controls.Add(this.txtConnStr);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.label1);
            this.Controls.Add(this.btnGenConnStr);
            this.Controls.Add(this.tabConn);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.MinimumSize = new System.Drawing.Size(673, 359);
            this.Name = "FormConnectionString";
            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
            this.Text = "Connection String Generator";
            this.Load += new System.EventHandler(this.FormConnectionString_Load);
            ((System.ComponentModel.ISupportInitialize)(this.pic)).EndInit();
            this.ResumeLayout(false);
            this.PerformLayout();

        }
		#endregion

        ////////////////////////////////////////////////////////////////////////
        public FormConnectionString()
        {
            InitializeComponent();
        }
        protected override void Dispose( bool disposing )
        {
            if( disposing )
            {
                if(components != null)
                {
                    components.Dispose();
                }
            }
            base.Dispose( disposing );
        }

        private void FormConnectionString_Load(object sender, System.EventArgs e)
        {
            BuildConnTab();
        }

        void BuildConnTab()
        {
            try
            {
                // ��xml�ļ��ж�ȡ������Ϣ
                Cfgs = (ConnPanelCfgs)Tool.Data.Serialization.LoadXml(ConfigFile, Cfgs.GetType());
                if (Cfgs == null)  throw new Exception("Xml config file error");

                // �������ö�̬����ҳ��
                int i = 0;
                this.tabConn.TabPages.Clear();
                foreach (ConnPanelCfg cfg in this.Cfgs.Items)
                {
                    // ��̬�����û��ؼ�
                    ObjectHandle oh = System.Activator.CreateInstanceFrom(cfg.AssemblyFile, cfg.TypeName);
                    UserControl ctl = (UserControl)oh.Unwrap();
                    // ��ӵ�page��
                    this.tabConn.TabPages.Add(new TabPage(cfg.Name));
                    this.tabConn.TabPages[i].ImageIndex = 0;
                    this.tabConn.TabPages[i++].Controls.Add(ctl);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(this, ex.Message, "Error");
            }
        }

        ////////////////////////////////////////////////////////////////////////
        private void btnGenConnStr_Click(object sender, System.EventArgs e)
        {
            IConnectionString i = (IConnectionString)this.tabConn.SelectedTab.Controls[0];
            this.txtConnStr.Text = i.ConnectionString;
        }

        
        private void btnGenEncodeFile_Click(object sender, System.EventArgs e)
        {
            if (DialogResult.OK == this.dlgSaveFile.ShowDialog(this))
            {
                string strIn = this.txtConnStr.Text;
                string fileOut = this.dlgSaveFile.FileName;
                string key = this.txtKey.Text;
                try
                {
                    Tool.Security.Security.EncryptDesS2F(strIn, fileOut, key);
                    MessageBox.Show(this, "Save '" + fileOut +"' Ok", "Encode");
                }
                catch (Exception ex)
                {
                    MessageBox.Show(this, "Encode error: " + ex.Message, "Encode");
                }            
            }
        }

        private void btnDecodeFile_Click(object sender, System.EventArgs e)
        {
            string strCode = "To get this result:\r\n\t using Tool.Security;\r\n\t string str = Tool.Security.Security.DecryptDesF2S(fileIn, key);";
            if (DialogResult.OK == this.dlgOpenFile.ShowDialog(this))
            {
                string fileIn = this.dlgOpenFile.FileName;
                string key = this.txtKey.Text;
                try
                {
                    string str = Tool.Security.Security.DecryptDesF2S(fileIn, key);
                    MessageBox.Show(this, str + "\r\n\r\n" + strCode, "Decode");
                }
                catch (Exception ex)
                {
                    MessageBox.Show(this, "Decode error: " + ex.Message, "Decode");
                }
            }
        }

        private void lnk_LinkClicked(object sender, System.Windows.Forms.LinkLabelLinkClickedEventArgs e)
        {
            System.Diagnostics.Process.Start("http://surfsky.cnblogs.com");
        }

        private void pic_DoubleClick(object sender, System.EventArgs e)
        {
            System.Diagnostics.Process.Start("notepad.exe", "readme.txt");
        }

        private void lnkReference_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            System.Diagnostics.Process.Start("http://www.connectionstrings.com");
        }

        private void btnCopy_Click(object sender, EventArgs e)
        {
            this.txtConnStr.SelectAll();
            this.txtConnStr.Copy();
        }

	}

    ////////////////////////////////////////////////////////////////////////
    public class ConnPanelCfg
    {
        public string Name = "";
        public string AssemblyFile = "";
        public string TypeName = "";

        public ConnPanelCfg(){}
        public ConnPanelCfg(string name, string assemblyFile, string typeName)
        {
            Name = name;
            AssemblyFile = assemblyFile;
            TypeName = typeName;
        }
    }

    public class ConnPanelCfgs
    {
        public ConnPanelCfg[] Items;

        public ConnPanelCfgs()
        {
            //ExampleCfg();
        }
        public void ExampleCfg()
        {
            Items = new ConnPanelCfg[]
                {
                    new ConnPanelCfg("Oracle",    "ConnectionString.exe", "ConnectionString.ConnOracle"),
                    new ConnPanelCfg("SqlServer", "ConnectionString.exe", "ConnectionString.ConnSqlServer")
                };
        }
    }
}


【文件】 \FormConnectionString.resx
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgs.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>257, 17</value>
  </metadata>
  <data name="imgs.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADc
        BwAAAk1TRnQBSQFMAgEBCAEAAQkBAAEEAQABAwEAAQUBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABDAMAAQ8DAAEBAQABCAUAAbQZAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/z4AAWECAAGFAewBAAGM
        AQAB9wH/AXoBAAH5AgAB2wGtAgABLAG8AfEBegIAAfkBAAHcAdQBLAGMAQAB/wH3AZoBAAH5AgAC3AIA
        ASwB7wHzAXoEAAEKAgABjAEAAfcB/wF6AewCAAGsAf8BswHsAgAB8wLvAf8B7AEAAbIBtAEJAf8B7AEA
        AYoBtAGKAewB/wHsAdMB/wGsAewB/wHsAYoB3AGKAf8B7AEAAccB/wEZAf8B7AEAAYoBGQGKAewDAALa
        AewCAAOKAUIBTQE+BwABPgMAASgDAAEMAwABDwMAAQEBAAEBBQABPBcAA/8VAAGyAYACAAGzAwAB0AGA
        AgABswMAAfYBgAIAAWEBgAIAASABgAYAASABgAIAAXEBgAIACw==
</value>
  </data>
  <metadata name="dlgSaveFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAASAKIGANvPOeDifvn4v/n63Pv83iAQCP7+7/z94yH/C05FVFNDQVBFMi4wAwEAAAAh/h1C
        dWlsdCB3aXRoIEdJRiBNb3ZpZSBHZWFyIDIuNgAh+QQJBQAGACwAAAAAEAASAAADTGi63P4wyklrLHjh
        4oogwzYQAqd9RKqqpuGRo4q2RQDE6gAErfsVLBKtcMOlBjrORoBakUouDACGRH4Aps1OUGXyGNoAU2Dr
        aTZoRgIAIfkECQoABgAsAAAAABAAEgAAA1doutz+MMppim22sCLI0EoxEAJYjV6GfksRCEBHeHFgVu6s
        23cVfDqRbRMboDwDmMkVQBpHL5AlACD8jM2YJgOgCp4wwTBT6ArO6GGI+zpTe+R4rxV3JAAAIfkECQoA
        BgAsAAAAABAAEgAAA1toatXbZT1CQCyARlmouIImMdnwAUO1cQHlBisXusQ3MsLQaWaMDSkaYWB5BIBB
        ChBmzCGRApsCEyUEBK0oc1q4XrXRFQQTKJctmzEEwIY81HBf3D2ax+rjmyEBACH5BAkKAAYALAAAAAAQ
        ABIAAANXaLrc/jDKaYpttrAiyNBKMRACWI1ehn5LEQhAR3hxYFburNt3FXw6kW0TG6A8A5jJFUAaRy+Q
        JQAg/IzNmCYDoAqeMMEwU+gKzuhhiPs6U3vkeK8VdyQAACH5BAkFAAYALAAAAAAQABIAAANMaLrc/jDK
        SWsseOHiiiDDNhACp31Eqqqm4ZGjirZFAMTqAASt+xUsEq1ww6UGOs5GgFqRSi4MAIZEfgCmzU5QZfIY
        2gBTYOtpNmhGAgAh+QQJBQAGACwAAAAAEAASAAADTGi63P4wyklrLHjh4oogwzYQAqd9RKqqpuGRo4q2
        RQDE6gAErfsVLBKtcMOlBjrORoBakUouDACGRH4Aps1OUGXyGNoAU2DraTZoRgIAIfkECQoABgAsAAAA
        ABAAEgAAA1doutz+MMppim22sCLI0EoxEAJYjV6GfksRCEBHeHFgVu6s23cVfDqRbRMboDwDmMkVQBpH
        L5AlACD8jM2YJgOgCp4wwTBT6ArO6GGI+zpTe+R4rxV3JAAAIfkECQoABgAsAAAAABAAEgAAA1toatXb
        ZT1CQCyARlmouIImMdnwAUO1cQHlBisXusQ3MsLQaWaMDSkaYWB5BIBBChBmzCGRApsCEyUEBK0oc1q4
        XrXRFQQTKJctmzEEwIY81HBf3D2ax+rjmyEBACH5BAkKAAYALAAAAAAQABIAAANXaLrc/jDKaYpttrAi
        yNBKMRACWI1ehn5LEQhAR3hxYFburNt3FXw6kW0TG6A8A5jJFUAaRy+QJQAg/IzNmCYDoAqeMMEwU+gK
        zuhhiPs6U3vkeK8VdyQAACH5BAkFAAYALAAAAAAQABIAAANMaLrc/jDKSWsseOHiiiDDNhACp31Eqqqm
        4ZGjirZFAMTqAASt+xUsEq1ww6UGOs5GgFqRSi4MAIZEfgCmzU5QZfIY2gBTYOtpNmhGAgAh+QQJBQAG
        ACwAAAAAEAASAAADTGi63P4wyklrLHjh4oogwzYQAqd9RKqqpuGRo4q2RQDE6gAErfsVLBKtcMOlBjrO
        RoBakUouDACGRH4Aps1OUGXyGNoAU2DraTZoRgIAIfkECQoABgAsAAAAABAAEgAAA1doutz+MMppim22
        sCLI0EoxEAJYjV6GfksRCEBHeHFgVu6s23cVfDqRbRMboDwDmMkVQBpHL5AlACD8jM2YJgOgCp4wwTBT
        6ArO6GGI+zpTe+R4rxV3JAAAIfkECQoABgAsAAAAABAAEgAAA1toatXbZT1CQCyARlmouIImMdnwAUO1
        cQHlBisXusQ3MsLQaWaMDSkaYWB5BIBBChBmzCGRApsCEyUEBK0oc1q4XrXRFQQTKJctmzEEwIY81HBf
        3D2ax+rjmyEBACH5BAkKAAYALAAAAAAQABIAAANXaLrc/jDKaYpttrAiyNBKMRACWI1ehn5LEQhAR3hx
        YFburNt3FXw6kW0TG6A8A5jJFUAaRy+QJQAg/IzNmCYDoAqeMMEwU+gKzuhhiPs6U3vkeK8VdyQAACH5
        BAkFAAYALAAAAAAQABIAAANMaLrc/jDKSWsseOHiiiDDNhACp31Eqqqm4ZGjirZFAMTqAASt+xUsEq1w
        w6UGOs5GgFqRSi4MAIZEfgCmzU5QZfIY2gBTYOtpNmhGAgAh+QQJBQAGACwAAAAAEAASAAADTGi63P4w
        yklrLHjh4oogwzYQAqd9RKqqpuGRo4q2RQDE6gAErfsVLBKtcMOlBjrORoBakUouDACGRH4Aps1OUGXy
        GNoAU2DraTZoRgIAIfkECQoABgAsAAAAABAAEgAAA1doutz+MMppim22sCLI0EoxEAJYjV6GfksRCEBH
        eHFgVu6s23cVfDqRbRMboDwDmMkVQBpHL5AlACD8jM2YJgOgCp4wwTBT6ArO6GGI+zpTe+R4rxV3JAAA
        IfkECQoABgAsAAAAABAAEgAAA1toatXbZT1CQCyARlmouIImMdnwAUO1cQHlBisXusQ3MsLQaWaMDSka
        YWB5BIBBChBmzCGRApsCEyUEBK0oc1q4XrXRFQQTKJctmzEEwIY81HBf3D2ax+rjmyEBACH5BAkKAAYA
        LAAAAAAQABIAAANXaLrc/jDKaYpttrAiyNBKMRACWI1ehn5LEQhAR3hxYFburNt3FXw6kW0TG6A8A5jJ
        FUAaRy+QJQAg/IzNmCYDoAqeMMEwU+gKzuhhiPs6U3vkeK8VdyQAACH5BAkFAAYALAAAAAAQABIAAANM
        aLrc/jDKSWsseOHiiiDDNhACp31Eqqqm4ZGjirZFAMTqAASt+xUsEq1ww6UGOs5GgFqRSi4MAIZEfgCm
        zU5QZfIY2gBTYOtpNmhGAgAh+QQJBQAGACwAAAAAEAASAAADTGi63P4wyklrLHjh4oogwzYQAqd9RKqq
        puGRo4q2RQDE6gAErfsVLBKtcMOlBjrORoBakUouDACGRH4Aps1OUGXyGNoAU2DraTZoRgIAIfkECQoA
        BgAsAAAAABAAEgAAA1doutz+MMppim22sCLI0EoxEAJYjV6GfksRCEBHeHFgVu6s23cVfDqRbRMboDwD
        mMkVQBpHL5AlACD8jM2YJgOgCp4wwTBT6ArO6GGI+zpTe+R4rxV3JAAAIfkECQoABgAsAAAAABAAEgAA
        A1toatXbZT1CQCyARlmouIImMdnwAUO1cQHlBisXusQ3MsLQaWaMDSkaYWB5BIBBChBmzCGRApsCEyUE
        BK0oc1q4XrXRFQQTKJctmzEEwIY81HBf3D2ax+rjmyEBACH5BAkKAAYALAAAAAAQABIAAANXaLrc/jDK
        aYpttrAiyNBKMRACWI1ehn5LEQhAR3hxYFburNt3FXw6kW0TG6A8A5jJFUAaRy+QJQAg/IzNmCYDoAqe
        MMEwU+gKzuhhiPs6U3vkeK8VdyQAACH5BAkFAAYALAAAAAAQABIAAANMaLrc/jDKSWsseOHiiiDDNhAC
        p31Eqqqm4ZGjirZFAMTqAASt+xUsEq1ww6UGOs5GgFqRSi4MAIZEfgCmzU5QZfIY2gBTYOtpNmhGAgAh
        +QQJBQAGACwAAAAAEAASAAADTGi63P4wyklrLHjh4oogwzYQAqd9RKqqpuGRo4q2RQDE6gAErfsVLBKt
        cMOlBjrORoBakUouDACGRH4Aps1OUGXyGNoAU2DraTZoRgIAIfkECQoABgAsAAAAABAAEgAAA1doutz+
        MMppim22sCLI0EoxEAJYjV6GfksRCEBHeHFgVu6s23cVfDqRbRMboDwDmMkVQBpHL5AlACD8jM2YJgOg
        Cp4wwTBT6ArO6GGI+zpTe+R4rxV3JAAAIfkECQoABgAsAAAAABAAEgAAA1toatXbZT1CQCyARlmouIIm
        MdnwAUO1cQHlBisXusQ3MsLQaWaMDSkaYWB5BIBBChBmzCGRApsCEyUEBK0oc1q4XrXRFQQTKJctmzEE
        wIY81HBf3D2ax+rjmyEBACH5BAkKAAYALAAAAAAQABIAAANXaLrc/jDKaYpttrAiyNBKMRACWI1ehn5L
        EQhAR3hxYFburNt3FXw6kW0TG6A8A5jJFUAaRy+QJQAg/IzNmCYDoAqeMMEwU+gKzuhhiPs6U3vkeK8V
        dyQAACH5BAkFAAYALAAAAAAQABIAAANMaLrc/jDKSWsseOHiiiDDNhACp31Eqqqm4ZGjirZFAMTqAASt
        +xUsEq1ww6UGOs5GgFqRSi4MAIZEfgCmzU5QZfIY2gBTYOtpNmhGAgAh+QQJBQAGACwAAAAAEAASAAAD
        TGi63P4wyklrLHjh4oogwzYQAqd9RKqqpuGRo4q2RQDE6gAErfsVLBKtcMOlBjrORoBakUouDACGRH4A
        ps1OUGXyGNoAU2DraTZoRgIAIfkECQoABgAsAAAAABAAEgAAA1doutz+MMppim22sCLI0EoxEAJYjV6G
        fksRCEBHeHFgVu6s23cVfDqRbRMboDwDmMkVQBpHL5AlACD8jM2YJgOgCp4wwTBT6ArO6GGI+zpTe+R4
        rxV3JAAAIfkECQoABgAsAAAAABAAEgAAA1toatXbZT1CQCyARlmouIImMdnwAUO1cQHlBisXusQ3MsLQ
        aWaMDSkaYWB5BIBBChBmzCGRApsCEyUEBK0oc1q4XrXRFQQTKJctmzEEwIY81HBf3D2ax+rjmyEBACH5
        BAkKAAYALAAAAAAQABIAAANXaLrc/jDKaYpttrAiyNBKMRACWI1ehn5LEQhAR3hxYFburNt3FXw6kW0T
        G6A8A5jJFUAaRy+QJQAg/IzNmCYDoAqeMMEwU+gKzuhhiPs6U3vkeK8VdyQAACH5BAkFAAYALAAAAAAQ
        ABIAAANMaLrc/jDKSWsseOHiiiDDNhACp31Eqqqm4ZGjirZFAMTqAASt+xUsEq1ww6UGOs5GgFqRSi4M
        AIZEfgCmzU5QZfIY2gBTYOtpNmhGAgAh+QQJCgAGACwAAAAAEAASAAADV2i63P4wymmKbbawIsjQSjEQ
        AliNXoZ+SxEIQEd4cWBW7qzbdxV8OpFtExugPAOYyRVAGkcvkCUAIPyMzZgmA6AKnjDBMFPoCs7oYYj7
        OlN75HivFXckAAAh+QQJCQAGACwAAAAAEAASAAADWWi63P4wwkKlKoGMcmsrAkFwxUAIHIMNAWVqqRqK
        AyC0XyaKbXwFm10JtyjYBi/NQACIYTLIKCGA6gQA02jGRqIAroIo89b1UgVoNNFAMaevPnZ77nHQ44YE
        ACH5BAkJAAYALAAAAAAQABIAAANVaLrc/jDKGYt1tqwyiNBbN2QdMW4C4akmIASgUQQvq8KxMo8sBzMF
        16BkGggAsVmgOOzQQJYAgBBoLl2aDEAqaB5fWS1NQCb/dOKyNCfLuC+PN9uQAAAh+QQJCQAGACwAAAAA
        EAASAAADV2i63P4wymmKbbawIsjQSjEQAliNXoZ+SxEIQEd4cWBW7qzbdxV8OpFtExugPAOYyRVAGkcv
        kCUAIPyMzZgmA6AKnjDBMFPoCs7oYYj7OlN75HivFXckAAAh+QQJCQAGACwAAAAAEAASAAADWWi63P4w
        wkKlKoGMcmsrAkFwxUAIHIMNAWVqqRqKAyC0XyaKbXwFm10JtyjYBi/NQACIYTLIKCGA6gQA02jGRqIA
        roIo89b1UgVoNNFAMaevPnZ77nHQ44YEACH5BAkJAAYALAAAAAAQABIAAANVaLrc/jDKGYt1tqwyiNBb
        N2QdMW4C4akmIASgUQQvq8KxMo8sBzMF16BkGggAsVmgOOzQQJYAgBBoLl2aDEAqaB5fWS1NQCb/dOKy
        NCfLuC+PN9uQAAAh+QQJCQAGACwAAAAAEAASAAADV2i63P4wymmKbbawIsjQSjEQAliNXoZ+SxEIQEd4
        cWBW7qzbdxV8OpFtExugPAOYyRVAGkcvkCUAIPyMzZgmA6AKnjDBMFPoCs7oYYj7OlN75HivFXckAAAh
        +QQJCQAGACwAAAAAEAASAAADWWi63P4wwkKlKoGMcmsrAkFwxUAIHIMNAWVqqRqKAyC0XyaKbXwFm10J
        tyjYBi/NQACIYTLIKCGA6gQA02jGRqIAroIo89b1UgVoNNFAMaevPnZ77nHQ44YEACH5BAkJAAYALAAA
        AAAQABIAAANVaLrc/jDKGYt1tqwyiNBbN2QdMW4C4akmIASgUQQvq8KxMo8sBzMF16BkGggAsVmgOOzQ
        QJYAgBBoLl2aDEAqaB5fWS1NQCb/dOKyNCfLuC+PN9uQAAAh+QQJCQAGACwAAAAAEAASAAADV2i63P4w
        ymmKbbawIsjQSjEQAliNXoZ+SxEIQEd4cWBW7qzbdxV8OpFtExugPAOYyRVAGkcvkCUAIPyMzZgmA6AK
        njDBMFPoCs7oYYj7OlN75HivFXckAAAh+QQJBQAGACwAAAAAEAASAAADTGi63P4wyklrLHjh4oogwzYQ
        Aqd9RKqqpuGRo4q2RQDE6gAErfsVLBKtcMOlBjrORoBakUouDACGRH4Aps1OUGXyGNoAU2DraTZoRgIA
        IfkECQcABgAsAAAAABAAEgAAA0xoutz+MMpJKy14YiBCfgU3jAJQOMVAEKPKnkshqDPJCrBRBKJLlB7F
        prYqDky64aBQZA6CmJCAuBqUYFFAoGbt5JK47dSDa0TP0UUCACH5BAkHAAYALAAAAAAQABIAAANPaLrc
        /jDKSWO5tIQhiryA0HlPEQ6oAJCMJqKcELCGORAEjA/rouE5FLCjAAk4N8JR5bmYAIAkLgCY1UAbYZBZ
        NMJSVl9BFRDJQrSrc81KAAAh+QQJBwAGACwAAAAAEAASAAADR2i63P4wykmrpSXrAgsQwjAIANcUATgQ
        xBiYigcGa9uWCzqLIyuYmZRL1foZNEKe8nXMAJJKEtCZCokEzBw1wA2UYLGNeJEAACH5BAkHAAYALAAA
        AAAQABIAAANIaLrc/jDKSassOBdYgBjEIABbUwQfoYZCqXQfuIbkcsYzW2Lo4K++liGDivmOwgygeAwG
        drxAT0B9MpQpgsBq4sm4D97WpUgAACH5BAkKAAYALAAAAAAQABIAAANMaLrc/jDKSWsseOHiiiDDNhAC
        p31Eqqqm4ZGjirZFAMTqAASt+xUsEq1ww6UGOs5GgFqRSi4MAIZEfgCmzU5QZfIY2gBTYOtpNmhGAgA7
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        agfvaQfvaAbuZwbuZwbuZgbuZQXxgjXEYUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADukV7vgCXz
        gBH0gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA70gA7jdSLY
        fVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADvlGLpg0jngETnf0TlfkTkfUTjfETie0TgekTe
        eETdd0TbdkTZdETYckTWcUTUb0TSbkTQbETPakTNaUTbgF4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////D////Af///wAAP/AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gA
        AA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gA
        AA/8AAAf/////////////////////w==
</value>
  </data>
</root>


【文件】 \task_ConnectionString.txt
Oracle�е����
    Provider=MSDAORA.1;Password=repadmwz;Persist Security Info=True;User ID=repadm;Data Source=jfbk.world
    Provider=OraOLEDB.Oracle.1; Data source=JFBK.WORLD; User id=repadm; Password=repadmwz;

------------------------------------------------------------------------------------
/EncodeLogon --> ConnectionString
/{} --> <>
/combobox width more
/combobox width more
/�������ö�̬����panel
/��app.config�ж�ȡ����(�Ժ���˵������Ҳû��ֱ�Ӳ���xml���㣩
/��xml�ļ��ж�ȡ����

------------------------------------------------------------------------------------
        [XmlAttribute] public string Name;
        [XmlAttribute] public string AssemblyFile;
        [XmlAttribute] public string TypeName;
        //[XmlElementAttribute(ElementName="ConnPanelCfg", IsNullable=false)]
        /*
        public object Create(Object parent, Object context, XmlNode node) 
        {
            foreach (XmlNode child in node.ChildNodes) 
            {
                Name = child.Attributes["name"].Value;
                AssemblyFile = child.Attributes["assemblyFile"].Value;
                TypeName = child.Attributes["TypeName"].Value;
            }
            return this;
        }
        */

    [XmlInclude(typeof(ConnPanelCfg))]
    [XmlInclude(typeof(ConnPanelCfgs))]
                    new ConnPanelCfg("Access",    "EncodeLogon.exe", "EncodeLogon.ConnAccess")

            //Tool.Data.Serialization.SaveXml(@"c:\ConnPanelCfg.xml", Cfgs, Cfgs.GetType());
            ConnPanelCfg cfg = new ConnPanelCfg("name", "file", "type");
            Tool.Data.Serialization.SaveXml(@"c:\Cfg.xml", cfg, cfg.GetType());
  // : IConfigurationSectionHandler
  
  
              // ��Config�ļ��ж�ȡ������Ϣ



